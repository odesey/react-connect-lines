{"mappings":"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","sources":["index.ts","Connect.tsx","elements/index.ts","elements/context.ts","elements/hooks.ts","elements/provider.tsx","elements/reducer.ts","ConnectProvider.tsx","lines/index.ts","lines/ConnectLines.tsx","lines/utils/index.ts","lines/utils/pathify.ts","lines/utils/getGroupedConnections.ts","lines/utils/getElement.ts","lines/utils/getPathData.ts"],"sourcesContent":["import {Connect} from './Connect'\nimport {ConnectProvider} from './ConnectProvider'\nimport {ConnectLines} from './lines/ConnectLines'\nimport type {ConnectElement} from './types'\n\nexport {Connect, ConnectProvider, ConnectLines, ConnectElement}\n","import React, {cloneElement, useCallback, useEffect, useMemo, useRef} from 'react'\nimport {useConnectElements} from './elements'\nimport {ConnectElement} from './types'\n\nexport interface ConnectProps extends Omit<ConnectElement, 'element'> {\n  children: React.ReactElement\n}\n\nexport function Connect(props: ConnectProps) {\n  const {children, id, connectWith} = props\n  const {dispatch} = useConnectElements()\n  const nodeRef = useRef<HTMLElement>()\n\n  const handleAdd = useCallback(() => {\n    dispatch({\n      type: 'add',\n      id,\n      connectWith,\n      element: nodeRef.current,\n    })\n  }, [connectWith, dispatch, id])\n\n  const clone = useMemo(() => {\n    const {props: childProps} = children\n\n    return cloneElement(children, {\n      ...childProps,\n      ref: (node: HTMLElement) => {\n        nodeRef.current = node\n\n        if (typeof children === 'function') childProps.ref(node)\n      },\n    })\n  }, [children])\n\n  useEffect(() => {\n    handleAdd()\n  }, [props, handleAdd, nodeRef])\n\n  useEffect(() => {\n    return () => {\n      dispatch({\n        type: 'remove',\n        id,\n      })\n    }\n  }, [dispatch, id])\n\n  return clone\n}\n","export * from './context'\nexport * from './hooks'\nexport * from './provider'\n","import {createContext} from 'react'\nimport {ConnectElementsContextValue} from '../types'\n\nexport const ConnectElementsContext = createContext<ConnectElementsContextValue>({\n  elements: [],\n  dispatch: () => null,\n})\n","import {useContext} from 'react'\nimport {ConnectElementsContext} from './context'\n\nexport function useConnectElements() {\n  const ctxVal = useContext(ConnectElementsContext)\n\n  if (!ctxVal) {\n    throw new Error('Missing context value')\n  }\n\n  return useContext(ConnectElementsContext)\n}\n","import {useMemo, useReducer} from 'react'\nimport {ConnectElementsContext} from './context'\nimport {connectElementsReducer} from './reducer'\n\ninterface ConnectElementsProviderProps {\n  children: React.ReactNode\n}\n\nexport function ConnectElementsProvider(props: ConnectElementsProviderProps) {\n  const {children} = props\n  const [state, dispatch] = useReducer(connectElementsReducer, {\n    elements: [],\n    dispatch: () => null,\n  })\n\n  const ctxVal = useMemo(\n    () => ({\n      elements: state.elements,\n      dispatch: dispatch,\n    }),\n    [state]\n  )\n\n  return (\n    <ConnectElementsContext.Provider value={ctxVal}>{children}</ConnectElementsContext.Provider>\n  )\n}\n","import {ConnectElement, ConnectElementsContextValue, ConnectElementsReducerPayload} from '../types'\n\nexport function connectElementsReducer(\n  state: ConnectElementsContextValue,\n  payload: ConnectElementsReducerPayload\n): ConnectElementsContextValue {\n  const {type, id, element, connectWith} = payload\n\n  const exists = state?.elements?.some((l) => l.id === id)\n  const connectWithArr = connectWith || []\n  const node: ConnectElement & {element?: HTMLElement | null} = {\n    id,\n    element,\n    connectWith: connectWithArr,\n  }\n\n  if (type === 'add' && element) {\n    if (!exists) {\n      return {\n        ...state,\n        elements: [...state.elements, node],\n      }\n    }\n\n    if (exists) {\n      const next = [...state.elements].map((el) => {\n        if (el.id === id) {\n          return node\n        }\n\n        return el\n      })\n\n      return {...state, elements: next}\n    }\n\n    return state\n  }\n\n  if (type === 'remove') {\n    return {\n      ...state,\n      elements: state.elements\n        .map((x) => {\n          return {\n            ...x,\n            connectWith: x.connectWith?.filter((y) => y.id !== id),\n          }\n        })\n        .filter((el) => el.id !== id),\n    }\n  }\n\n  return state\n}\n","import React from 'react'\nimport {ConnectElementsProvider, useConnectElements} from './elements'\nimport {ConnectLines} from './lines'\n\nexport interface ConnectProviderProps {\n  children: React.ReactNode\n}\n\nfunction ConnectProviderInner() {\n  const {elements} = useConnectElements()\n\n  return <ConnectLines elements={elements} />\n}\n\nexport function ConnectProvider(props: ConnectProviderProps) {\n  const {children} = props\n\n  return (\n    <ConnectElementsProvider>\n      {children}\n      <ConnectProviderInner />\n    </ConnectElementsProvider>\n  )\n}\n","export * from './ConnectLines'\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ConnectElement, Edge, Stroke} from '../types'\nimport {getElement, getGroupedConnections, getPathData, pathify} from './utils'\n\nconst SVG_STYLE: React.CSSProperties = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  pointerEvents: 'none',\n  width: '100%',\n  height: '100%',\n}\n\nconst DEFAULT_COLOR = '#000000'\nconst EMPTY_ARRAY: [] = []\n\ntype PointsData = (\n  | {\n      rect: DOMRect | undefined\n      color: string | undefined\n      edge: Edge\n      stroke: Stroke\n      d: string\n    }\n  | undefined\n)[]\n\ninterface ConnectLinesProps {\n  elements: ConnectElement[]\n}\n\nexport function ConnectLines(props: ConnectLinesProps) {\n  const [pointsData, setPointsData] = useState<PointsData>(EMPTY_ARRAY)\n  const [isInteracting, setIsInteracting] = useState<boolean>(false)\n  const {elements} = props\n  const raf = useRef<number>()\n\n  /**\n   * Create array of all colors configured.\n   * These colors is used to render the svg markers (e.g arrows).\n   */\n  const colors = useMemo(\n    () =>\n      [\n        ...new Set([\n          ...elements.map((e) => e.connectWith?.map((c) => c?.color)).flat(),\n          DEFAULT_COLOR,\n        ]),\n      ].filter(Boolean),\n    [elements]\n  )\n\n  const handleCalcLines = useCallback(() => {\n    if (raf.current) {\n      window.cancelAnimationFrame(raf.current)\n    }\n\n    raf.current = window.requestAnimationFrame(() => {\n      /**\n       * The `getGroupedConnections` function returns:\n       *\n       *  {\n       *    from: DOMRect,\n       *    to: {\n       *       rect: DOMRect,\n       *       color: string,\n       *       edge: string,\n       *       stroke: string\n       *    }[]\n       *  }\n       */\n      const groupedConnections = getGroupedConnections({elements})\n\n      const points = groupedConnections\n        .map((data) => {\n          const {from, to: toArray} = data || {}\n\n          const pathDataArr = toArray?.map((to) => {\n            /**\n             * The `getPathData` function returns an array of objects with\n             * x and y coordinates for the line.\n             */\n            const pathData = getPathData({from: from, to: to})\n\n            if (!pathData) return\n\n            /**\n             * The `pathify` functions returns a svg-readable string of the coordinates\n             */\n            const path = pathify({paths: pathData, edge: to?.edge})\n\n            /**\n             * Dummy validation of the path\n             */\n            if (!/\\d/.test(path)) return\n\n            /**\n             * Return the path (d) together with other relevant data such as color, stroke, edge.\n             */\n            return {\n              d: path,\n              ...to,\n            }\n          })\n\n          return pathDataArr\n        })\n        .filter(Boolean)\n        .flat()\n\n      const data = points.filter((p) => Boolean(p))\n\n      setPointsData(data)\n    })\n  }, [elements])\n\n  /**\n   * Handle drag and drop gestures and update the paths\n   */\n  const handleStartInteracting = useCallback(() => {\n    setIsInteracting(true)\n  }, [])\n\n  const handleStopInteracting = useCallback(() => {\n    setIsInteracting(false)\n  }, [])\n\n  const handleUpdateLines = useCallback(() => {\n    if (isInteracting) handleCalcLines()\n  }, [handleCalcLines, isInteracting])\n\n  useEffect(() => {\n    handleCalcLines()\n  }, [handleCalcLines])\n\n  useEffect(() => {\n    window.addEventListener('resize', handleCalcLines, {passive: true})\n    window.addEventListener('scroll', handleCalcLines, {passive: true})\n\n    return () => {\n      window.removeEventListener('resize', handleCalcLines)\n      window.removeEventListener('scroll', handleCalcLines)\n    }\n  }, [handleCalcLines])\n\n  const ro = useMemo(() => new ResizeObserver(handleCalcLines), [handleCalcLines])\n\n  useEffect(() => {\n    elements.forEach((el) => {\n      const element = getElement(el)\n\n      element?.addEventListener('mousedown', handleStartInteracting, {passive: true})\n      element?.addEventListener('mouseup', handleStopInteracting, {passive: true})\n      element?.addEventListener('mousemove', handleUpdateLines, {passive: true})\n      element?.addEventListener('touchstart', handleStartInteracting, {passive: true})\n      element?.addEventListener('touchend', handleStopInteracting, {passive: true})\n      element?.addEventListener('touchmove', handleUpdateLines, {passive: true})\n\n      if (element) {\n        ro.observe(element)\n      }\n    })\n\n    return () => {\n      elements.forEach((el) => {\n        const element = getElement(el)\n\n        element?.removeEventListener('mousedown', handleStartInteracting)\n        element?.removeEventListener('mouseup', handleStopInteracting)\n        element?.removeEventListener('mousemove', handleUpdateLines)\n        element?.removeEventListener('touchstart', handleStartInteracting)\n        element?.removeEventListener('touchend', handleStopInteracting)\n        element?.removeEventListener('touchmove', handleUpdateLines)\n\n        if (element) {\n          ro.disconnect()\n          ro.unobserve(element)\n        }\n      })\n    }\n  }, [\n    elements,\n    handleCalcLines,\n    handleStartInteracting,\n    handleStopInteracting,\n    handleUpdateLines,\n    ro,\n  ])\n\n  return useMemo(\n    () => (\n      <svg style={SVG_STYLE}>\n        {colors?.map((c) => (\n          <defs key={c}>\n            <marker\n              id={`triangle-${c}`}\n              markerHeight=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth=\"5\"\n              orient=\"auto\"\n              refX=\"1\"\n              refY=\"5\"\n              viewBox=\"0 0 10 10\"\n            >\n              <path d=\"M 0 0 L 10 5 L 0 10 z\" fill={c} />\n              {/* <circle cx=\"5\" cy=\"5\" r=\"5\" fill={c} /> */}\n            </marker>\n          </defs>\n        ))}\n\n        {pointsData?.map((p) => {\n          return (\n            <path\n              id=\"p1\"\n              d={p?.d}\n              fill=\"none\"\n              key={p?.d}\n              markerEnd={`url(#triangle-${p?.color})`}\n              stroke={p?.color}\n              strokeWidth=\"2\"\n              strokeDasharray={p?.stroke === 'dashed' ? 4 : 0}\n              strokeLinejoin=\"round\"\n            />\n          )\n        })}\n      </svg>\n    ),\n    [colors, pointsData]\n  )\n}\n","export * from './pathify'\nexport * from './getGroupedConnections'\nexport * from './getPathData'\nexport * from './getElement'\n","import {Edge} from '../../types'\n\ninterface PathifyProps {\n  paths: {x: string | number; y: string | number}[]\n  edge?: Edge\n}\n\nexport const pathify = (props: PathifyProps) => {\n  const {paths, edge} = props\n\n  const path = `M ${paths\n    .map((p, index) => {\n      if (index === 1 && edge === 'step') return `${p.x} ${p.y}`\n      if (index === 1 && edge === 'bezier') return `C ${p.x} ${p.y}`\n\n      return `${p.x} ${p.y}`\n    })\n    .join(' ')}`\n\n  return path\n}\n","import {ConnectElement} from '../../types'\nimport {getElement} from './getElement'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface GetGroupedConnectionsProps {\n  elements: ConnectElement[]\n}\n\nexport function getGroupedConnections(props: GetGroupedConnectionsProps) {\n  const {elements} = props\n\n  // const connections = elements?.map((e) => e.connectWith?.map((x) => x?.id)).flat()\n\n  const grouped = elements\n    .filter((e) => (e?.connectWith || EMPTY_ARRAY).length > 0)\n    .map((el) => {\n      const {connectWith} = el\n\n      // const connectionsLen = connections.filter((y) => y === el.id)?.length || 0\n\n      const connectEls = elements\n        .filter((c) => connectWith?.map((a) => a.id).includes(c.id))\n        .map((x) => {\n          return {\n            rect: getElement(x)?.getBoundingClientRect(),\n            color: connectWith?.find((a) => a.id === x.id)?.color || '#000000',\n            edge: connectWith?.find((a) => a.id === x.id)?.edge || 'bezier',\n            stroke: connectWith?.find((a) => a.id === x.id)?.stroke || 'solid',\n            // connectionsLen: connectionsLen,\n          }\n        })\n\n      if (connectEls.length === 0) return\n\n      return {\n        from: {\n          rect: getElement(el)?.getBoundingClientRect(),\n        },\n        to: connectEls,\n      }\n    })\n    .filter(Boolean)\n\n  return grouped\n}\n","import {ConnectElement} from '../../types'\n\nexport function getElement(el: ConnectElement & {element?: HTMLElement}) {\n  if (!el.element) {\n    return document.querySelector(`#${el.id}`)\n  }\n\n  return el.element\n}\n","interface GetPathDataProps {\n  from?: {\n    rect: DOMRect | undefined\n  }\n  to?: {\n    rect: DOMRect | undefined\n  }\n}\n\nconst LINE_OFFSET = 9\nconst POS_OFFSET = 40\n\nfunction getPosition(props: {from: DOMRect; to: DOMRect}) {\n  const {from, to} = props\n\n  const allowYConnect =\n    from.left - POS_OFFSET < to.right && from.right + to.width > to.right - POS_OFFSET\n\n  const bottomToTop = from.bottom < to.top && allowYConnect\n  const topToBottom = from.top > to.bottom && allowYConnect\n  const rightToLeft = from.left > to.right\n  const leftToRight = from.right < to.left\n\n  if (bottomToTop) return 'bottom-to-top'\n  if (topToBottom) return 'top-to-bottom'\n  if (rightToLeft) return 'right-to-left'\n  if (leftToRight) return 'left-to-right'\n}\n\nexport function getPathData(props: GetPathDataProps) {\n  const {from, to} = props\n  const fromRect = from?.rect\n  const toRect = to?.rect\n\n  if (!fromRect || !toRect) return\n\n  const position = getPosition({from: fromRect, to: toRect})\n\n  switch (position) {\n    case 'bottom-to-top': {\n      return [\n        {\n          x: fromRect?.left + fromRect.width / 2,\n          y: fromRect?.bottom,\n        },\n        {\n          x: fromRect?.left + fromRect.width / 2,\n          y: fromRect.bottom - (fromRect.bottom - toRect.top) / 2,\n        },\n        {\n          x: toRect?.left + toRect.width / 2,\n          y: fromRect.bottom - (fromRect.bottom - toRect.top) / 2,\n        },\n        {\n          x: toRect?.left + toRect.width / 2,\n          y: toRect.top - LINE_OFFSET,\n        },\n      ]\n    }\n\n    case 'top-to-bottom': {\n      return [\n        {\n          x: fromRect?.left + fromRect.width / 2,\n          y: fromRect?.top,\n        },\n        {\n          x: fromRect?.left + fromRect.width / 2,\n          y: fromRect.top - (fromRect.top - toRect.bottom) / 2,\n        },\n        {\n          x: toRect?.left + toRect.width / 2,\n          y: fromRect.top - (fromRect.top - toRect.bottom) / 2,\n        },\n        {\n          x: toRect?.left + toRect.width / 2,\n          y: toRect.bottom + LINE_OFFSET,\n        },\n      ]\n    }\n\n    case 'right-to-left': {\n      return [\n        {\n          x: fromRect?.left,\n          y: fromRect?.bottom - fromRect.height / 2,\n        },\n        {\n          x: (toRect.right + fromRect.left) / 2,\n          y: fromRect?.bottom - fromRect.height / 2,\n        },\n        {\n          x: (toRect.right + fromRect.left) / 2,\n          y: toRect.top + toRect.height / 2,\n        },\n        {\n          x: toRect.right + LINE_OFFSET,\n          y: toRect.top + toRect.height / 2,\n        },\n      ]\n    }\n\n    case 'left-to-right': {\n      return [\n        {\n          x: fromRect?.right,\n          y: fromRect?.bottom - fromRect.height / 2,\n        },\n        {\n          x: (toRect.left + fromRect.right) / 2,\n          y: fromRect?.bottom - fromRect.height / 2,\n        },\n        {\n          x: (toRect.left + fromRect.right) / 2,\n          y: toRect.top + toRect.height / 2,\n        },\n        {\n          x: toRect.left - LINE_OFFSET,\n          y: toRect.top + toRect.height / 2,\n        },\n      ]\n    }\n\n    default:\n      return []\n  }\n}\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../"}